<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>app</title>
        <!--
            we can load jQuery using the path we gave express.js for
            serving its directory as static files.
        -->
        <script src='js/jquery/dist/jquery.min.js' ></script>

        <!--
            the 'defer' keyword here in the script load is not necessary, but
            it's a relatively new browser feature that helps make sure the
            script doesn't try to run until the page has finished loading
            properly. It's quite handy, but you can safely delete it if you're
            using $(function(){ ... }) to wrap your scripts, since that will
            also properly wait for the page to load.
        -->
        <script defer type='text/javascript'>
            /*****************************************************************
             * JQUERY REQUEST
             *****************************************************************/
            // we'll use the jQuery function '$.ajax' to POST data to the
            // server.
            $(function () {
                $('#button').click(function () {
                    $.ajax({
                        url: '/example',

                        // here, we make sure the encoding is JSON so
                        // that we know exactly what we're passing through.
                        contentType: 'application/json',
                        dataType   : 'json',

                        // the type has to be POST so it hits the right
                        // endpoint, since you can have POST and GET routes
                        // of the same URL.
                        type: 'post',

                        // serialize the data we want as JSON. There are other
                        // ways to send data, but this was the most convenient
                        // for this example.

                        // the property 'data' on the '.$ajax' function puts
                        // the given data in the REQUEST BODY. It will be available
                        // there, if properly encoded.

                        // JSON.stringify is a built-in browser function to turn
                        // javascript into JSON.
                        data: JSON.stringify({ input: $('#userinput').val() }),

                        // this is the code that will run if the [POST]
                        // goes through successfully. This will show up in your
                        // BROWSER's debug console.

                        // Hit F12 to see your browser debug tools!
                        success: function (result, status, xhr) {
                            console.log('success: ', result.message);
                        },

                        // this is the code that will run if the [POST]
                        // fails to go through.This will show up in your
                        // BROWSER's debug console.

                        // Hit F12 to see your browser debug tools!
                        error: function (xhr, status, err) {
                            console.log('err: ', err);
                        }
                    });
                });
            });
        </script>
    </head>
    <body>
        <input id='userinput'
               type='text'>
        <button id='button'>Button</button>
    </body>
</html>
